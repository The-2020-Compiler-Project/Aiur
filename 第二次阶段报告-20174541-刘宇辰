语法分析是编译的第二阶段，其任务是识别和处理比单词更大的语法单位，
如程序设计语言中的表达式、各种说明和语句乃至全部源程序，
指出其中的语法错误，必要时可生成内部形式，便于下一阶段处理。
语言的结构是用上下文无关文法描述的。因此语法分析器的工作本质就是按照文法的产生式，
识别判断输入的源程序符号串是否为文法的一个合法句子
语法分析方法通常分为自顶向下法和自底向上法两大类。
自顶向下的分析分析方法包括递归下降子程序和LL(1)方法。
自底向上的方法包括LR(0)方法和LR(1)方法。本次课程设计，
我们采用递归下降子程序的语法分析方法。递归下降子程序分析法直观易懂，
便于设计和实现，同时有利于后续语法制导生成中间代码。
递归下降子程序的方法的关键是在词法分析生成的Token序列的基础上编写递归下降子程序。
递归下降子程序的方法要求文法为非左递归文法，对此，我们下组设计了较为完善的非左递归的C语言文法。

目前各个模块都已完成，衔接工作也基本完成，正在进行测试阶段。
